@model IEnumerable<F1005.Models.CashExpense>
@*@model F1005.Models.CashExpense*@
@{
	ViewBag.Title = "Index";
}


@*jsGrid Table*@
<div class="container" style="background-color:lavenderblush">
	<div class="jumbotron">
		<h2 style="font-family:'Microsoft JhengHei'"><i class="glyphicon glyphicon-th-list"></i>  現金支出明細表</h2>
	</div>

	<div class="panel panel-info" id="myP">
		<div class="panel-heading">現金支出明細表</div>
		<div class="panel-body"><div id="jsGridExpense"></div></div>
	</div>
	<div class="panel panel-danger" style="margin-left:500px;">
		<div class="panel-heading">現金餘額</div>
		<div class="panel-body">
			<div>
				<h2 id="IncomeBalance"></h2>
			</div>
			<div>
				<h2 id="ExpenseBalance"></h2>
			</div>
			<div>
				<h2 id="DiffBalance"></h2>
			</div>
		</div>
	</div>
</div>

@*現金支出統計圖*@
<div class="container" style="background-color:lavenderblush">
	<div class="jumbotron">
		<h2 style="font-family:'Microsoft JhengHei'"><i class="glyphicon glyphicon-stats"></i>  支出紀錄統計圖</h2>
	</div>
	<label>請選擇查詢年份:</label>@Html.DropDownList("Year", new SelectList(new[] { "--- 請選擇---" }), null, new { @class = "form-control" })
	<label>請選擇查詢月份:</label>@Html.DropDownList("Month", new SelectList(new[] { "1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月" }), "---請選擇---", new { @class = "form-control", @onchange = "MonthChange()" });
	<div class="col-md-8 col-md-offset-2" id="xx">
		<canvas id="CashExpenseHis"></canvas>
	</div>
</div>

@*現金收入vs支出圓餅圖*@
<div class="container" style="background-color:lavenderblush">
	<div class="jumbotron">
		<h2 style="font-family:'Microsoft JhengHei'"><i class="glyphicon glyphicon-stats"></i>  資產分布百分比</h2>
	</div>
	<div class="row" style="height:350px" id="dd">
		<div class="col-lg-12">
			<canvas id="Doughnut"></canvas>
		</div>
		@*Draw Pie*@
		@*<div class="col-lg-6">
				<canvas id="Pie"></canvas>
			</div>*@
	</div>
</div>


@section scripts{
	<script>
		$(function () {
			init();
			GetExpenseHis();
			GetIncomeBalance();
			GetExpenseBalance();
			GetDiff();
			LoadDoughnut();

			for (var i = 2000; i < 2021; i++) {
				var Yp = document.createElement("option")
				var Y = document.createTextNode(i);
				Yp.appendChild(Y);
				document.getElementById("Year").append(Yp);
			}
		});

		function GetIncomeBalance() {
			$.ajax({
				type: "Get",
				url:"@Url.Action("GetIncomeBalance", "CashIncomes")"
			}).done(function (res) {
				document.getElementById("IncomeBalance").innerHTML = "<h2>" + " 目前總收入:  " + res + "</h2>";
				document.getElementById("IncomeBalance").setAttribute("class", "text-right text-success");
			})
		};

		function GetExpenseBalance() {
			$.ajax({
				type: "Get",
				url:"@Url.Action("GetExpenseBalance", "CashExpenses")"
			}).done(function (res) {
				document.getElementById("ExpenseBalance").innerHTML = "<h2>" + " 目前總支出:  " + res + "</h2>";
				document.getElementById("ExpenseBalance").setAttribute("class", "text-right text-danger");
			})
		};

		function GetDiff() {
			$.ajax({
				type: "Get",
				url:"@Url.Action("GetDiff", "CashIncomes")"
			}).done(function (res) {
				document.getElementById("DiffBalance").innerHTML = "<h2>" + " 收支差額:  " + res + "</h2>";
				document.getElementById("DiffBalance").setAttribute("class", "text-right text-default");


			})
		};


		function init() {
				$.ajax({
					type: "Get",
					url: "@Url.Action("GetAllExpense", "CashExpenses")",
				}).done(function (res) {
					var MyDateField = function (config) {
						jsGrid.Field.call(this, config);
					};

					MyDateField.prototype = new jsGrid.Field({

						css: "date-field",            // redefine general property 'css'
						align: "center",              // redefine general property 'align'

						myCustomProperty: "foo",      // custom property

						sorter: function (date1, date2) {
							return new Date(date1) - new Date(date2);
						},

						itemTemplate: function (value) {
							return new Date(value).toDateString();
						},

						insertTemplate: function (value) {
							return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
						},

						editTemplate: function (value) {
							return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
						},

						insertValue: function () {
							return this._insertPicker.datepicker("getDate").toISOString();
						},

						editValue: function () {
							return this._editPicker.datepicker("getDate").toISOString();
						}
					});

					jsGrid.fields.date = MyDateField;
					var filter = $("#grid").jsGrid("getFilter");

					//var Ttype = [
					//	{ Name: "---請選擇---", Id: 0 },
					//	{ Name: "現金", Id: 1 },
					//	{ Name: "股票", Id: 2 },
					//	{ Name: "外匯", Id: 3 },
					//	{ Name: "基金", Id: 4 },
					//	{ Name: "儲蓄險", Id: 5 }
					//];

					$("#jsGridExpense").jsGrid({
						width: "100%",
						height: "400px",

						//filtering: true,
						inserting: true,
						editing: true,
						sorting: true,
						paging: true,
						autoload: true,
						pageSize: 10,
						pageButtonCount: 5,
						deleteConfirm: "確定要刪除這筆資料?",
						pagerFormat: "頁數: {first} {prev} {pages} {next} {last}    {pageIndex} 之 {pageCount}",
						pagePrevText: "上一頁",
						pageNextText: "下一頁",
						pageFirstText: "第一頁",
						pageLastText: "最終頁",
						noDataContent: "目前沒有紀錄",

						data: res,

						controller: {
							loadData: function (filter) {
								return $.ajax({
									type: "GET",
									url: "@Url.Action("GetAllExpense", "CashExpenses")",
									data: filter
								});
							},

							insertItem: function (item) {
								item.UserName = "@Session["User"]";
								item.ExCashType = "現金支出";
								var dd = {
									UserName: item.UserName,
									ExCashType: item.ExCashType,
									ExAmount: item.ExAmount,
									ExDate: item.ExDate,
									ExNote: item.ExNote
								}
								return $.ajax({
									type: "POST",
									url: "@Url.Action("InsertExpense", "CashExpenses")",
									data: dd
								}).done(function (res) {
									$("#jsGridExpense").jsGrid("loadData");
									if (res <0)
									{
										$('#myP').notify("收入不足，無法新增支出項目", "error", { position: "bottom" });
									}
									else
									{
										$('#myP').notify("新增成功", "success", { position: "bottom" });
										GetExpenseHis();
										GetIncomeBalance();
										GetExpenseBalance();
										GetDiff();
										LoadDoughnut();
										clearCanvas();
									}
								})
							},

							updateItem: function (item) {
								return $.ajax({
									type: "PUT",
									url: "@Url.Action("EditExpense", "CashExpenses")",
									data: item
								}).done(function () {
									$("#jsGridExpense").jsGrid("loadData");
									$('#myP').notify("修改成功", "success", { position: "bottom" });
									GetExpenseHis();
									GetIncomeBalance();
									GetExpenseBalance();
									GetDiff();
									LoadDoughnut();
									clearCanvas();
								});
							},

							deleteItem: function (item) {
								var id = item.ExCashID;
								return $.ajax({
									type: "Delete",
									url: "@Url.Action("DeleteExpense", "CashExpenses")/" + id,
									data: item
								}).done(function (res) {
									$("#jsGridExpense").jsGrid("loadData");
									$('#myP').notify("刪除成功", "success", { position: "bottom" });
									GetExpenseHis();
									GetIncomeBalance();
									GetExpenseBalance();
									GetDiff();
									LoadDoughnut();
									clearCanvas();
								});
							},
						},

						fields: [
							{ name: "ExCashID", type: "text", title: "交易序號", width: 100, inserting: false },
							{ name: "UserName", type: "text", title: "使用者代號", width: 100, inserting: false},
							{ name: "ExCashType", type: "text", title: "交易類別", width: 100, inserting: false},
							{ name: "ExAmount", type: "text", title: "支出金額", width: 100, validate: "required"},
							{ name: "ExDate", type: "date", title: "日期", width: 100, validate: "required" },
							{ name: "ExNote", type: "text", title: "我的筆記", width: 100, sorting: false },
							{ type: "control" }
						],

					});
				}).fail(function (err) {
					alert("Error");
				});


		};//init tail

		function clearCanvas() {
			$('#CashExpenseHis').remove();
			$('#xx').append('<canvas id="CashExpenseHis"></canvas>');
			container = document.getElementById("CashExpenseHis");
			context = container.getContext("2d");
		}


		//Draw Date Cash
        function GetExpenseHis() {
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetExpenseHis", "CashExpenses")",
            data: null,
            dataType: "json",
            success: function (response) {
                var MyDate = [];
				var MyAmount = [];
				var BackColor = [];
				var BorderColor = [];
                for (var i = 0; i <= response.length - 1; i++) {
                    MyDate.push(response[i].MyDate);
					MyAmount.push(response[i].Amount);
					BackColor.push('rgba(255,99,135,0.2)');
					BorderColor.push('rgba(255,99,132,1)');
                };
				var ctx = document.getElementById("CashExpenseHis").getContext("2d");
                var myBarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: MyDate,
                        datasets: [{
                            label: "現金支出歷史紀錄",
							data: MyAmount,
							backgroundColor: BackColor,
							borderColor: BorderColor,
                            borderWidth:2
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [
                                {
                                    ticks: { beginAtZero: true }
                                }],
                        }
                    }
                });
            }
        });
		}

		//Draw Date Cash by Month
		function MonthChange() {
			var d = document.getElementById("Month").value;
			var month = d.substring(0, 1);
			if (d == "10月" || d == "11月" || d == "12月") {
				var month = d.substring(0, 2);
			}
			var year = document.getElementById("Year").value;

        $.ajax({
            type: "Get",
            url: "@Url.Action("GetExpenseHisByMonth", "CashExpenses")/",
			data: { "year": year, "month": month },
            dataType: "json",
			success: function (response) {
				clearCanvas();
                var MyDate = [];
				var MyAmount = [];
				var BackColor = [];
				var BorderColor = [];
                for (var i = 0; i <= response.length - 1; i++) {
                    MyDate.push(response[i].MyDate);
					MyAmount.push(response[i].Amount);
					BackColor.push('rgba(255,99,135,0.2)');
					BorderColor.push('rgba(255,99,132,1)');
                };
				var ctx = document.getElementById("CashExpenseHis").getContext("2d");
                var myBarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: MyDate,
                        datasets: [{
                            label: "現金支出歷史紀錄",
							data: MyAmount,
							backgroundColor: BackColor,
							borderColor: BorderColor,
                            borderWidth:2
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [
                                {
                                    ticks: { beginAtZero: true }
                                }],
                        }
                    }
                });
            }
        });
		}

			//資產分布百分比甜甜圈
        //Draw Doughnut
		function LoadDoughnut()
		{
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetPie", "CashExpenses")",
            data: null,
            dataType: "json",
            success: function (response) {
				var ctxDoughnut = document.getElementById("Doughnut");
                var DoughnutChart = new Chart(ctxDoughnut, {
                    type: 'doughnut',
                    data: {
                        labels: ["收入百分比","支出百分比"],
                        datasets: [{
							data: [response.IncomeP,response.ExpenseP],
                            backgroundColor: [
                                window.chartColors.blue,
                                window.chartColors.red,
                            ]
                        }],
                    },
                    options: {
                        responsive: true,
                        title: {
                            display: true,
                            fontSize: 26,
                            text: '收入資產百分比'
                        },
                    }
                })
            }
          });
		};


	</script>
}