@model F1005.Models.Fund

@{
	ViewBag.Title = "Sell";
}

<h2>贖回基金</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.SerialNumber)
<div class="col-md-12">

	<div class="col-md-6">

        <div class="form-horizontal">
            <hr />
            @Html.HiddenFor(model => model.CurrentNAV, htmlAttributes: new { id = "CurrentNAV" })
            <div class="form-group">
                @Html.LabelFor(model => model.FundName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FundName, new { htmlAttributes = new { @class = "form-control", id = "Name" } })
                    @Html.ValidationMessageFor(model => model.FundName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Units, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*<input checked="checked" id="MoneyorUnits1" name="MoneyorUnits" type="radio" value="1" />*@
                    直接輸入單位數
                    @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control", id = "FundUnits" } })
                    @*<input id="MoneyorUnits2" name="MoneyorUnits" type="radio" value="2" />*@
                    金額換算單位數
                    <input id="Money" type="text" class="form-control" placeholder="或以金額換算單位數" />
                    @Html.ValidationMessageFor(model => model.Units, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", id = "Date" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NAV, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NAV, new { htmlAttributes = new { @class = "form-control", id = "BuyNAV" } })
                    @Html.ValidationMessageFor(model => model.NAV, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SellNAV, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SellNAV, new { htmlAttributes = new { @class = "form-control", id = "SellNAV" } })
                    @Html.ValidationMessageFor(model => model.SellNAV, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RelateCash, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div>
                        <span>@Html.RadioButtonFor(model => model.RelateCash, true, new { htmlAttributes = new { @class = "form-control", id = "RelateCash" } })是,我想從現金資產扣款</span>
                    </div>
                    <div>

                        <span>	@Html.RadioButtonFor(model => model.RelateCash, false, new { htmlAttributes = new { @class = "form-control", id = "RelateCash" } })否,直接加入這筆基金</span>
                    </div>
                    @Html.ValidationMessageFor(model => model.RelateCash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="贖回" class="btn btn-default" />
                </div>
            </div>
        </div>
	</div>
	<div class="col-md-6">
		<span>投資總損益:</span><span id="FF"></span><br />
		<span>總報酬率:</span><span id="AR"></span><br />

		<canvas id="Returnchart"></canvas>
	</div>
</div>
}

<div>
	@Html.ActionLink("回到基金首頁", "Index")
</div>

@section scripts
	{
	@*<script>
		function Check1() {
			var radio = document.getElementById("MoneyorUnits1");
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");

			Money.disabled = true;
			Units.disabled = false;
		}
		function Check2() {
			var radio = document.getElementById("MoneyorUnits2");
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");

			Money.disabled = false;
			Units.disabled = true;
		}
		$(document).ready(function () {
			var radio1 = document.getElementById("MoneyorUnits1");
			var radio2 = document.getElementById("MoneyorUnits2");
			radio1.addEventListener("click", Check1);
			radio2.addEventListener("click", Check2);
			Check1();
		});
	</script>*@
	<script>
		function UnitsKeyUp() {
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");
			var NAV = document.getElementById("SellNAV");
			Money.value = Units.value * NAV.value;
		}
		function MoneyKeyUp() {
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");
			var NAV = document.getElementById("SellNAV");
			Units.value = (Money.value / NAV.value).toFixed(2);
		}
		$(document).ready(function () {
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");
			Units.addEventListener("keyup", UnitsKeyUp);
			Money.addEventListener("keyup", MoneyKeyUp)
		});
	</script>
	<script>
		function drawReturn()
		{
			var today = new Date();
			var FF = document.getElementById("FF");
			var AR = document.getElementById("AR");
			var CN = document.getElementById("CurrentNAV");
			var BN = document.getElementById("BuyNAV");
			var FundUnits = document.getElementById("FundUnits");

			FF.innerText = "新台幣$" + ((parseFloat(CN.value) - parseFloat(BN.value)) * parseFloat(FundUnits.value)).toFixed(0).toString();
			AR.innerText = ((parseFloat(CN.value) / parseFloat(BN.value)) - 1).toFixed(2).toString()+"%";
			var MyDate =
				[
					document.getElementById("Date").value.toString().substring(0, 10),
					today.toString().substring(0, 10)
				]
				;
			var MyAmount =
				[
					document.getElementById("BuyNAV").value.toString(),
					document.getElementById("CurrentNAV").value.toString(),
			];
			
			var MyBackground = [];
			var MyBorder = [];
			for (var i = 0; i < MyAmount.length; i++) {
				MyBackground.push('rgba(54, 162, 235, 0.5)');
				MyBorder.push('rgba(54, 162, 235, 1)');
			}


			var ctx = document.getElementById("Returnchart").getContext("2d");
			var myBarChart = new Chart(ctx, {
				type: 'bar',
				data: {
					labels: MyDate,
					datasets: [{
						label: document.getElementById("Name").value.toString() + "損益",
						data: MyAmount,
						backgroundColor: MyBackground,
						borderColor: MyBorder,
						borderWidth: 2
					}]
				},
				options: {
					scales: {
						yAxes: [
							{
								ticks: { beginAtZero: true }
							}],
					}
				}
			});
		}
		$(document).ready(function () {
			drawReturn();
		});
	</script>
}
