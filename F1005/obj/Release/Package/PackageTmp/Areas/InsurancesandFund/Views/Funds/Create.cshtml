@model F1005.Models.Fund

@{
	ViewBag.Title = "Create";
}
@section styles
	{
	<style>
		#Date {
			resize: none;
		}
	</style>
	}

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="col-md-12">



		<div class="col-md-6">

            <div class="form-horizontal">
                <hr />
                <div class="form-group">
                    <label class="control-label col-md-2">基金公司</label>
                    <div class="col-md-10">
                        <select id="CompanyList" class="form-control"></select>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">選擇基金</label>
                    <div class="col-md-10">
                        <select id="FundList" class="form-control"></select>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FundName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FundName, new { htmlAttributes = new { @class = "form-control", id = "FundName", placeholder = "請由上方選擇基金名稱" } })
                        @Html.ValidationMessageFor(model => model.FundName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入手續費%" } })
                        @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NAV, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NAV, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入購買淨值", id = "NAV" } })
                        @Html.ValidationMessageFor(model => model.NAV, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Units, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*<input checked="checked" id="MoneyorUnits1" name="MoneyorUnits" type="radio" value="1" />*@
                        直接輸入單位數
                        @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入單位數", id = "FundUnits" } })
                        @*<input id="MoneyorUnits2" name="MoneyorUnits" type="radio" value="2" />*@
                        金額換算單位數
                        <input id="Money" type="text" class="form-control" placeholder="或以金額換算單位數" />
                        @Html.ValidationMessageFor(model => model.Units, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", type = "date", placeholder = "請選擇交易日期", id = "Date" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RelateCash, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div>
                            <span>@Html.RadioButtonFor(model => model.RelateCash, true, new { htmlAttributes = new { @class = "form-control", id = "RelateCash" } })是,我想從現金資產扣款</span>
                        </div>
                        <div>

                            <span>	@Html.RadioButtonFor(model => model.RelateCash, false, new { htmlAttributes = new { @class = "form-control", id = "RelateCash" } })否,直接加入這筆基金</span>
                        </div>
                        @Html.ValidationMessageFor(model => model.RelateCash, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="確定加入" class="btn btn-default" />
                    </div>
                </div>
            </div>

		</div>
		<div id="details" class="col-md-6" hidden="hidden">
			<br />
			<br />
			<br />

			<span>基金公司:</span><span id="CN"></span><br />
			<span>基金名稱:</span><span id="FN"></span><br />
			<span>基金統編:</span><span id="FC"></span><br />
			<span>收付幣別:</span><span id="CC"></span><br />
			<span>最新淨值:</span><span id="LN"></span><br />

		</div>
	</div>
}
<div>
	@Html.ActionLink("回到基金首頁", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
<script>
	function getCompanylist()
	{
		$.ajax({
			type: "GET",
			url: "@Url.Action("GetCompanyList", "Funds")",
			dataType: "json"
		}).done(function (response) {
			var Company = document.getElementById("CompanyList");
			var inner = "";

			for (var i = 0; i < response.length; i++)
			{
				var arr = $.map(response[i], function (qq) { return qq; })
				inner = inner + '<option value=' + arr[0] + '>' + arr[0] + '</option>';
			}
			Company.innerHTML = inner;
			});
	}
	function getFundList()
	{
		var companyname = document.getElementById("CompanyList").value;
		var para =
		{
			"CompanyName": companyname,
			"FundName":"aaa"
		}
		$.ajax({
			type: "POST",
			url: "@Url.Action("GetFundList", "Funds")",
				data: para,
			dataType: "json",
		}).done(function (response) {
			var Fund = document.getElementById("FundList");
				var inner = "";

				for (var i = 0; i < response.length; i++) {
					var arr = $.map(response[i], function (qq) { return qq; })
					inner = inner + '<option value=' + arr[0] + '>' + arr[0] + '</option>';
				}
			Fund.innerHTML = inner;
			});

	}
	function getfundName()
	{
		var Fund = document.getElementById("FundList");
		document.getElementById("FundName").value = Fund.value;
	}
	$(document).ready(function () {
		getCompanylist()
		var company = document.getElementById("CompanyList")
		company.addEventListener("change", getFundList)
		var Fund = document.getElementById("FundList")
		Fund.addEventListener("change", getfundName)

		company.selectedIndex = 0;
		Fund.selectedIndex = 0

	});

	</script>
	@*<script>
		function Check1()
		{
			var radio = document.getElementById("MoneyorUnits1");
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");

				Money.disabled = true;
				Units.disabled = false;
		}
		function Check2() {
			var radio = document.getElementById("MoneyorUnits2");
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");

			Money.disabled = false;
			Units.disabled = true;
		}
		$(document).ready(function () {
			var radio1 = document.getElementById("MoneyorUnits1");
			var radio2 = document.getElementById("MoneyorUnits2");
			radio1.addEventListener("click", Check1);
			radio2.addEventListener("click", Check2);
			Check1();
		});
	</script>*@
	<script>
		function UnitsKeyUp()
		{
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");
			var NAV = document.getElementById("NAV");
			Money.value = Units.value * NAV.value;
		}
		function MoneyKeyUp() {
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");
			var NAV = document.getElementById("NAV");
			Units.value = (Money.value / NAV.value).toFixed(2);
		}
		$(document).ready(function () {
			var Units = document.getElementById("FundUnits");
			var Money = document.getElementById("Money");
			Units.addEventListener("keyup", UnitsKeyUp);
			Money.addEventListener("keyup", MoneyKeyUp)
		});
	</script>

	<script>
		function getdetails()
		{
			document.getElementById("details").hidden = false;

			var Fundname = document.getElementById("FundList").value;
			var para =
			{
				"CompanyName": "aaa",
				"FundName": Fundname
			}
			$.ajax({
				type: "POST",
				url: "@Url.Action("GetFundDetails", "Funds")",
				data: para,
				dataType: "json"
			}).done(function (response)
				{
				for (var i = 0; i < response.length; i++) {
					var arr = $.map(response[i], function (qq) { return qq; })
					document.getElementById("CN").innerText = arr[0];
					document.getElementById("FN").innerText = arr[1];
					document.getElementById("FC").innerText = arr[2];
					document.getElementById("CC").innerText = arr[3];
					document.getElementById("LN").innerText = arr[4];
				}
				});
		}
		
		$(document).ready(function () {
			var Fund = document.getElementById("FundList")
			Fund.addEventListener("change", getdetails);
		});
	</script>
}
